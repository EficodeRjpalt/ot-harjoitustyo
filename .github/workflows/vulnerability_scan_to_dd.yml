name: "Fetch GitHub Vulnerabilities Data with Frequency Control"

on:
  workflow_dispatch:

permissions:
  contents: read

env:
  FREQUENCY: "daily"  # Set to "daily" or "weekly" based on your needs

jobs:
  github-vulnerability-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Time Range Based on Frequency
        id: time_range
        run: |
          if [ "${{ env.FREQUENCY }}" = "daily" ]; then
            since=$(date -u -d '24 hours ago' +"%Y-%m-%dT%H:%M:%SZ")
          else
            since=$(date -u -d '7 days ago' +"%Y-%m-%dT%H:%M:%SZ")
          fi
          echo "Filtering vulnerabilities created since: $since"
          echo "::set-output name=since::$since"

      - name: Fetch GitHub Vulnerabilities Data (GraphQL)
        env:
          GITHUB_TOKEN: ${{ secrets.DEPENDABOT_TOKEN }}
        run: |
          owner="${{ github.repository_owner }}"
          name="${{ github.event.repository.name }}"
          since="${{ steps.time_range.outputs.since }}"

          query='query ($owner: String!, $name: String!, $since: DateTime!) { repository(owner: $owner, name: $name) { vulnerabilityAlerts(first: 100) { nodes { id createdAt state securityVulnerability { severity package { name ecosystem } advisory { summary identifiers { value type } references { url } cvss { score vectorString } } } } } } }'
          
          json_data="{\"query\": \"$query\", \"variables\": {\"owner\": \"$owner\", \"name\": \"$name\", \"since\": \"$since\"}}"

          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "$json_data" https://api.github.com/graphql \
               -o github_vulnerabilities.json

      - name: Display Filtered Vulnerabilities
        if: success()
        run: |
          echo "GitHub Vulnerabilities created since ${{ steps.time_range.outputs.since }}:"
          cat github_vulnerabilities.json
