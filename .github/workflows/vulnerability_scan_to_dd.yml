
name: "Fetch Dependabot Vulnerabilities"

on:
  workflow_dispatch:

permissions:
  contents: read
  security-events: read

jobs:
  dependabot-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Full Dependabot Vulnerabilities Data
        env:
          GITHUB_TOKEN: ${{ secrets.DEPENDABOT_TOKEN }}
        run: |
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts" \
            | tee full_dependabot_vulnerabilities.json

      - name: Upload Vulnerabilities to Defect Dojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DD_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DD_URL }}
          DEFECTDOJO_ENGAGEMENT: ${{ secrets.DD_ENGAGEMENT }}
          engagement: "${{ secrets.DD_ENGAGEMENT }}"  # Replace with actual engagement ID or set as a secret
          environment: "Production"      # Define or set as needed
          scanType: "Github Vulnerability Scan"
        run: |
          report="full_dependabot_vulnerabilities.json"
          ext=$(echo $report | cut -d "." -f 2)
          curl -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
            -H "Authorization: Token $DEFECTDOJO_API_KEY" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -F "engagement=$engagement" \
            -F "scan_type=$scanType" \
            -F "test_title=$scanType" \
            -F 'close_old_findings=true' \
            -F 'deduplication_on_engagement=true' \
            -F 'create_finding_groups_for_all_findings=false' \
            -F "environment=$environment" \
            -F "file=@$report;type=application/$ext" \
            -F "branch_tag=$DEFECTDOJO_ENGAGEMENT"

      - name: Display Vulnerabilities
        if: success()
        run: |
          echo "Dependabot Vulnerabilities:"
          cat full_dependabot_vulnerabilities.json
