name: "Fetch and Upload Full GitHub Vulnerabilities Data to DD"

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  github-vulnerability-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Full GitHub Vulnerabilities Data (GraphQL)
        env:
          GITHUB_TOKEN: ${{ secrets.DEPENDABOT_TOKEN }}
        run: |
          owner="EficodeRjpalt"
          name="ot-harjoitustyo"
          query='query ($owner: String!, $name: String!) { repository(owner: $owner, name: $name) { vulnerabilityAlerts(first: 100) { nodes { id createdAt dismissedAt dismisser { login } dismissReason vulnerableManifestFilename vulnerableManifestPath vulnerableRequirements state securityVulnerability { severity updatedAt package { name ecosystem } advisory { description summary identifiers { value type } references { url } cvss { score vectorString } origin publishedAt updatedAt withdrawnAt } firstPatchedVersion { identifier } } } } } }'
          
          json_data="{\"query\": \"$query\", \"variables\": {\"owner\": \"$owner\", \"name\": \"$name\"}}"
          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "$json_data" https://api.github.com/graphql \
               -o github_vulnerabilities.json
      - name: Upload Vulnerabilities to Defect Dojo
        env:
          DEFECTDOJO_API_KEY: ${{ secrets.DD_API_KEY }}
          DEFECTDOJO_URL: ${{ secrets.DD_URL }}
          DEFECTDOJO_ENGAGEMENT: ${{ secrets.DD_ENGAGEMENT }}
          environment: "Production"
          scanType: "Github Vulnerability Scan"
        run: |
          report="github_vulnerabilities.json"
          ext="json"
          curl -X POST "$DEFECTDOJO_URL/api/v2/import-scan/" \
            -H "Authorization: Token $DEFECTDOJO_API_KEY" \
            -H "accept: application/json" \
            -H "Content-Type: multipart/form-data" \
            -F "engagement=$DEFECTDOJO_ENGAGEMENT" \
            -F "scan_type=$scanType" \
            -F "test_title=$scanType" \
            -F 'close_old_findings=true' \
            -F 'deduplication_on_engagement=true' \
            -F 'create_finding_groups_for_all_findings=false' \
            -F "environment=$environment" \
            -F "file=@$report;type=application/$ext" \
            -F "branch_tag=$DEFECTDOJO_ENGAGEMENT"
      - name: Display Vulnerabilities
        if: success()
        run: |
          echo "GitHub Vulnerabilities:"
          cat github_vulnerabilities.json
